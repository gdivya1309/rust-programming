1. Write a program to display output using print!
fn main() {
    println!("divya")
}

2. Write a program to display Output following pattern using Placeholders
1
22
333
4444
55555
fn main() {
    for i in 1..=5 {
        for _ in 0..i {
            print!("{}", i);
        }
        println!();
    }
}


3. Write a program to do the following
a. Declare a variable x and store value 1000 in it.
b. Declare a variable y and store value “Programming” in it
c. Print the values of x and y
d. Change the value of x to 1100
e. Print the values of x and y 
fn main() {
    let mut x = 1000;
    let y = "Programming";
    println!("x = {}", x);
    println!("y = {}", y);
    x = 1100;
    println!("After change:");
    println!("x = {}", x);
    println!("y = {}", y);
}

4. Write a program to implement the Scope and Shadowing  
fn main() {
    let x = 5;
    {
        let x = 10;
        println!("Inner scope x = {}", x);
    }
    println!("Outer scope x = {}", x);

    let y = 20;
    let y = y + 5;
    println!("Shadowed y = {}", y);
}

5. Write a program to implement the following
a. Implicit type declaration
b. Explicit type declaration 
fn main() {
    let x = 42;
    let y = 3.14;

    let a: i32 = 100;
    let b: f64 = 2.718;

    println!("Implicit x = {}, y = {}", x, y);
    println!("Explicit a = {}, b = {}", a, b);
}
6. Write Program to Declare an array, arr, of size 6 that has numbers divisible by 2 ranging
from 0 to 10 and Print the value of arr. 
fn main() {
    let arr = [0, 2, 4, 6, 8, 10];
    for val in arr.iter() {
        println!("{}", val);
    }
}

 7. Write a program to create and access a tuple 
fn main() {
    let tup = (500, "hello", 3.14);
    println!("{}", tup.0);
    println!("{}", tup.1);
    println!("{}", tup.2);
}

8. Write a program to create an array of 10 elements and implement the following
a. Create a of 2nd and 3rd element
b. Omit the start index of the slice
c. Omit the End Index of the Slice
d. Omit both Start and End Index of the Slice
fn main() {
    let arr = [1,2,3,4,5,6,7,8,9,10];

    let slice_a = &arr[1..3];
    let slice_b = &arr[..3];
    let slice_c = &arr[1..];
    let slice_d = &arr[..];

    println!("{:?}", slice_a);
    println!("{:?}", slice_b);
    println!("{:?}", slice_c);
    println!("{:?}", slice_d);
}

9. Write a program to create different types of constants print it in the output 
fn main() {
    const MAX_POINTS: u32 = 100_000;
    const PI: f64 = 3.14159;
    const GREETING: &str = "Hello, Rust!";
    const IS_ACTIVE: bool = true;

    println!("MAX_POINTS = {}", MAX_POINTS);
    println!("PI = {}", PI);
    println!("GREETING = {}", GREETING);
    println!("IS_ACTIVE = {}", IS_ACTIVE);
}


10. Declaring String Object and converting String Literal to String Object 
fn main() {
    let s1 = String::new();
    let s2 = String::from("Hello, world!");
    let s3 = "Hello, Rust!".to_string();

    println!("{}", s1);
    println!("{}", s2);
    println!("{}", s3);
}


